---
const { faq } = Astro.props
---

<style is:global>
/* FAQ START */
.faq {
    background: #e2e5e9;
    padding-top: 5px;
    padding-bottom: 50px;
}

.faq__h1 {
    font-size: 25px;
    font-weight: 400;
    line-height: 29px;
    margin: 21px 0;
    text-align: center;
}

.faq__question--pre {
    font-size: 24px;
    margin-right: 15px;
    color: #dee2e7;
}

.faq__question__text {
    display: -webkit-inline-flex;
    display: -ms-inline-flexbox;
    display: inline-flex;
    width: 330.39px;
    font-family: Lato, sans-serif;
    font-size: 20px;
    font-weight: 600;
    line-height: 24px;
}

.faq__question {
    background-color: #fff;
    padding: 10px 20px 20px 20px;
    color: #fff;
    font-size: 22px;
    font-weight: 600;
    margin-top: 15px;
    cursor: pointer;
    /*text-indent:-1.5em;*/
}

.faq__question--open {
    color: #0c426d;
    background: #fff url(https://sun-coast-sciences.imgix.net/open-btn.png) no-repeat center;
    background-position: 95% 40%;
    -webkit-box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.1);
    box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.1);
}

.faq__question--closed {
    color: #363c3e;
    background: #fff url(https://sun-coast-sciences.imgix.net/close-btn.png) no-repeat center;
    background-position: 95% 40%;
}

.faq__answer--container {
    background-color: #fff;
    padding: 10px 40px;
    display: none;
    -webkit-box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.1);
    box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.1);
}

.faq__answer {
    font-family: sans-serif;
    font-size: 20px;
    font-weight: 300;
    color: #363c3e;
    line-height: 23px;
}

.faq__icon {
    margin-top: 40px;
}

.faq .faq-block-bg {
    background-color: #f5faff;
}

@media (min-width: 768px) {
    .faq__h1 {
        font-size: 40px;
        line-height: 48px;
        margin-top: 40px;
        margin-bottom: 40px;
    }

    .faq__question__text {
        width: 904px;
        font-size: 22px;
    }
}

/* FAQ END */    
</style>


<!-- FAQ -->

<section class="faq">
    <div class="container">
        <div class="row">
            <div class="col-xs-12">
                
                <h2 class="faq__h1 text-center" id="cta-disappear">BioLuna <br>Frequently Asked Questions</h2>
                
                <div id="faqs"></div>
                
                
            </div>
        </div>
    </div>
</section>

<!-- END FAQ -->
<script is:inline define:vars={{ faq }}>
    window.faq = faq
</script>
<script>

document.addEventListener("DOMContentLoaded", function() {
    var faqsContainer = document.getElementById('faqs');
    // @ts-ignore
    faq.forEach(function(el, index) {
        var questionDiv = document.createElement('div');
        questionDiv.className = 'faq__question faq__question--closed';
        // @ts-ignore
        questionDiv.innerHTML = '<span class="faq__question--pre">Q</span><span class="faq__question__text">' + faq[index].q + '</span>';
        faqsContainer.appendChild(questionDiv);

        var answerDiv = document.createElement('div');
        answerDiv.className = 'faq__answer--container';
        // @ts-ignore
        answerDiv.innerHTML = faq[index].a;
        faqsContainer.appendChild(answerDiv);
    });
});

// FAQ

document.addEventListener("DOMContentLoaded", function() {
    var floatFooter = document.querySelector('.float');
    var noFloatFooter = document.querySelector('.no-float');    
    // Attach click event listeners to FAQ questions
    document.querySelectorAll('.faq__question').forEach(function(question) {
        question.addEventListener('click', function() {
            var answerDiv = this.nextElementSibling;

            if (answerDiv.style.display === 'block') {
                slideUp(answerDiv,500)
                this.classList.remove('faq__question--open');
                this.classList.add('faq__question--closed');
            } else {
                this.classList.remove('faq__question--closed');
                this.classList.add('faq__question--open');
                slideDown(answerDiv,500)
            }

            setTimeout(() => {
                if (isVisible(noFloatFooter)) {
                    // @ts-ignore
                    floatFooter.style.display = "none"
                }
            // @ts-ignore
            }, "500");          
        });
    });
});


    /* SLIDE UP */
    let slideUp = (target, duration=500) => {

        target.style.transitionProperty = 'height, margin, padding';
        target.style.transitionDuration = duration + 'ms';
        target.style.boxSizing = 'border-box';
        target.style.height = target.offsetHeight + 'px';
        target.offsetHeight;
        target.style.overflow = 'hidden';
        target.style.height = 0;
        target.style.paddingTop = 0;
        target.style.paddingBottom = 0;
        target.style.marginTop = 0;
        target.style.marginBottom = 0;
        window.setTimeout( () => {
            target.style.display = 'none';
            target.style.removeProperty('height');
            target.style.removeProperty('padding-top');
            target.style.removeProperty('padding-bottom');
            target.style.removeProperty('margin-top');
            target.style.removeProperty('margin-bottom');
            target.style.removeProperty('overflow');
            target.style.removeProperty('transition-duration');
            target.style.removeProperty('transition-property');
            //alert("!");
        }, duration);
    }

/* SLIDE DOWN */
let slideDown = (target, duration=500) => {
    target.style.removeProperty('display');
    let display = window.getComputedStyle(target).display;
    if (display === 'none') display = 'block';
    target.style.display = display;
    let height = target.offsetHeight;
    target.style.overflow = 'hidden';
    target.style.height = 0;
    target.style.paddingTop = 0;
    target.style.paddingBottom = 0;
    target.style.marginTop = 0;
    target.style.marginBottom = 0;
    target.offsetHeight;
    target.style.boxSizing = 'border-box';
    target.style.transitionProperty = "height, margin, padding";
    target.style.transitionDuration = duration + 'ms';
    target.style.height = height + 'px';
    target.style.removeProperty('padding-top');
    target.style.removeProperty('padding-bottom');
    target.style.removeProperty('margin-top');
    target.style.removeProperty('margin-bottom');
    window.setTimeout( () => {
    target.style.removeProperty('height');
    target.style.removeProperty('overflow');
    target.style.removeProperty('transition-duration');
    target.style.removeProperty('transition-property');
    }, duration);
}

function isVisible (ele) {
    const { top, bottom } = ele.getBoundingClientRect();
    const vHeight = (window.innerHeight || document.documentElement.clientHeight);

    return (
        (top > 0 || bottom > 0) &&
        top < vHeight
    );
}     


// END FAQ    
</script>