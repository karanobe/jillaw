---
    /*    interface BaseLayoutProps {
            meta: {
                title: string;
                description: string;
                keywords?: string;
            }
    
        } */

    const { meta, funnel } = Astro.props;

    const title = meta?.title ?? 'Default Title';
    const description = meta?.description ?? 'Default Description';
    const keywords = meta?.keywords ?? 'default, keywords';

---

<html lang="en">

<head>
    <!-- Head content -->
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=1" />
    <meta property="og:image" />
    <meta property="og:locale" content="en_US" />
    <meta property="og:type" content="website" />

    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:url" content="trybioluna.com" />
    <meta property="og:site_name" content={funnel.company.name + ", LLC" } />

    <link rel="icon" href={funnel.company.favicon} sizes="32x32" />
    <title>{title}</title>
    <meta name="description" content={description} />
    <meta name="keywords" content={keywords} />
    <meta name="author" content={funnel.company.name} />

    <meta name="robots" content="noindex, nofollow" />


    <link href="https://www.google-analytics.com" rel="preconnect" crossorigin="anonymous" />
    <link href="https://www.googletagmanager.com" rel="preconnect" crossorigin="anonymous" />
    <link rel="dns-prefetch" href="https://www.google-analytics.com" />
    <link rel="dns-prefetch" href="https://www.googletagmanager.com" />

    <script>
        /**
         * Asynchronously sends URL parameters to the API server to store them into the session for tracking.
         * The API endpoint is constructed based on the current page's protocol and hostname.
         * Includes referrer information in the request headers.
         */
        (async function () {
            // Extract query parameters from the URL
            const params = new URLSearchParams(window.location.search);

            // Construct the API URL
            const protocol = window.location.protocol;
            const apex = window.location.hostname.split(".").slice(-2).join(".");
            const apiUrl = `${protocol}//api.${apex}/api/eye?${params.toString()}`;

            // Page information for referrer headers
            const pageInfo = {
                hostname: window.location.hostname,
                path: window.location.pathname,
            };

            try {
                // Fetch data from the API
                const response = await fetch(apiUrl, {
                    method: 'GET',
                    headers: {
                        'Content-Type': 'application/json',
                        'Referrer-Hostname': pageInfo.hostname,
                        'Referrer-Path': pageInfo.path,
                    },
                    credentials: 'include'
                });

                // Check if the response is ok (status 200-299)
                if (!response.ok) {
                    throw new Error(`HTTP error! Status: ${response.status}`);
                }

                // Parse the response JSON
                const data = await response.json();
                console.log('Query Parameters:', data);
            } catch (error) {
                // Log any errors that occur during the fetch
                console.error('Error:', error);
            }
        })();
    </script>

    <!-- Google Tag Manager -->
    <script>        (function (w, d, s, l, i) {
            w[l] = w[l] || []; w[l].push({
                'gtm.start':
                    new Date().getTime(), event: 'gtm.js'
            }); var f = d.getElementsByTagName(s)[0],
                j = d.createElement(s), dl = l != 'dataLayer' ? '&l=' + l : ''; j.async = true; j.src =
                    'https://www.googletagmanager.com/gtm.js?id=' + i + dl; f.parentNode.insertBefore(j, f);
})(window,document,'script','dataLayer','GTM-W4PHLL2');</script>
    <!-- End Google Tag Manager -->

    <slot name="headScripts"></slot>

</head>

<body>
    <slot />
    <!-- Google Tag Manager (noscript) -->
    <noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-W4PHLL2" height="0" width="0"
            style="display:none;visibility:hidden"></iframe></noscript>
    <!-- End Google Tag Manager (noscript) -->
</body>

</html>